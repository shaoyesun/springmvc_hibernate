springmvc整合hibernate
一、数据源连接
二、事务配置
三、shiro配置
    1.pom.xml
      <dependency>
         <groupId>org.apache.shiro</groupId>
         <artifactId>shiro-all</artifactId>
         <version>1.2.3</version>
      </dependency>
    2.新建applicationContext_shiro.xml
    3.web.xml配置
      1)在ContextLoaderListener中引入applicationContext_shiro.xml
      2)添加shiroFilter，在OpenSessionInViewFilter下面
      <filter>
        <filter-name>shiroFilter</filter-name>
        <filter-class>
          org.springframework.web.filter.DelegatingFilterProxy
        </filter-class>
      </filter>
      <filter-mapping>
        <filter-name>shiroFilter</filter-name>
        <url-pattern>/*</url-pattern>
      </filter-mapping>
    4.新建ShiroRealm.java
    5.为了识别多个角色实现过滤器CustomRolesAuthorizationFilter.java
    6.测试
      /toLogin = authc <!-- authc 表示需要认证才能访问的页面 -->
      /home = authc, perms[/home]  <!-- perms 表示需要该权限才能访问的页面 -->
      /admin = authc, roles[admin] <!--表示用户必需已通过认证,并拥有admin角色才可以正常发起'/admin'请求-->
      /home1/** = authc, roles[reg_user] <!--表示用户必需已通过认证,并拥有admin角色才可以正常发起'/home1'请求-->
      /home2/** = authc, roles[reg_user,admin] <!--表示用户必需已通过认证,并拥有admin或reg_user角色才可以正常发起'/home2'请求-->